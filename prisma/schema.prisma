// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?       @map("email_verified")
  password      String
  image         String?
  transactions  Transaction[]
 
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")

  @@map("users")
}

model Stock {
  ticker        String          @id @db.VarChar(6)
  name          String
  market        String
  transactions  Transaction[]

  @@map("stocks")
}

model Transaction {
  id                String     @id @default(cuid())
  
  stock             Stock      @relation(fields: [stockTicker],references: [ticker], onDelete: Cascade)
  stockTicker       String     @map("stock_ticker")
  user              User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String     @map("user_id")
  
  quantity          Int        @map("quantity")
  profit            Float?
  duration          Int?
  rateOfProfit      Float?
  rateOfProfitYear  Int?

  buyCreatedAt      DateTime?  @map("buy_created_at")
  buyPrice          Float?     @map("buy_price")
  sellCreatedAt     DateTime?  @map("sell_created_at")
  sellPrice         Float?     @map("sell_price")

  partiallyDone     TransactionStatus
  
  createdAt         DateTime   @default(now()) @map("created_at")
  updatedAt         DateTime   @updatedAt @map("updated_at")

  @@map("transactions")
}

enum TransactionStatus {
  BUY
  SELL
  DONE
}