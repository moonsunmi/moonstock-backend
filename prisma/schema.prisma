// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?       @map("email_verified")
  password      String
  image         String?

  buyTransactions  BuyTransaction[]
  
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")

  @@map("users")
}

model Stock {
  ticker        String          @id @db.VarChar(6)
  name          String
  market        String

  buyTransactions  BuyTransaction[]

  @@map("stocks")
}

model BuyTransaction {
  id                String    @id @default(cuid())
  stockTicker       String
  userId            String
  quantity          Int
  buyPrice          Float
  buyCreatedAt      DateTime

  user              User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  stock             Stock      @relation(fields: [stockTicker], references: [ticker], onDelete: Cascade)
  sellTransactions  SellTransaction[]

  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

// user와 필요할까?
model SellTransaction {
  id                String    @id @default(cuid())
  buyId             String
  quantity          Int
  sellPrice         Float
  sellCreatedAt     DateTime

  buyTransaction    BuyTransaction @relation(fields: [buyId], references: [id], onDelete: Cascade)
  
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}
